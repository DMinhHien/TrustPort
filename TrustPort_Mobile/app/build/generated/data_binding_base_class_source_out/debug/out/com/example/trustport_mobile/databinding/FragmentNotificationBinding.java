// Generated by view binder compiler. Do not edit!
package com.example.trustport_mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.trustport_mobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentNotificationBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final RelativeLayout heroSection;

  @NonNull
  public final TextView heroTitle;

  @NonNull
  public final RecyclerView notificationRecyclerView;

  private FragmentNotificationBinding(@NonNull RelativeLayout rootView,
      @NonNull RelativeLayout heroSection, @NonNull TextView heroTitle,
      @NonNull RecyclerView notificationRecyclerView) {
    this.rootView = rootView;
    this.heroSection = heroSection;
    this.heroTitle = heroTitle;
    this.notificationRecyclerView = notificationRecyclerView;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentNotificationBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentNotificationBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_notification, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentNotificationBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.hero_section;
      RelativeLayout heroSection = ViewBindings.findChildViewById(rootView, id);
      if (heroSection == null) {
        break missingId;
      }

      id = R.id.hero_title;
      TextView heroTitle = ViewBindings.findChildViewById(rootView, id);
      if (heroTitle == null) {
        break missingId;
      }

      id = R.id.notification_recycler_view;
      RecyclerView notificationRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (notificationRecyclerView == null) {
        break missingId;
      }

      return new FragmentNotificationBinding((RelativeLayout) rootView, heroSection, heroTitle,
          notificationRecyclerView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
