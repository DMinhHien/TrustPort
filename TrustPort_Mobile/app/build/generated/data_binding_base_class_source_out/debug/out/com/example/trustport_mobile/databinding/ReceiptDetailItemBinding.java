// Generated by view binder compiler. Do not edit!
package com.example.trustport_mobile.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.trustport_mobile.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ReceiptDetailItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final LinearLayout desc;

  @NonNull
  public final ImageView detailImage;

  @NonNull
  public final TextView detailName;

  @NonNull
  public final TextView detailPrice;

  @NonNull
  public final TextView detailQty;

  private ReceiptDetailItemBinding(@NonNull CardView rootView, @NonNull LinearLayout desc,
      @NonNull ImageView detailImage, @NonNull TextView detailName, @NonNull TextView detailPrice,
      @NonNull TextView detailQty) {
    this.rootView = rootView;
    this.desc = desc;
    this.detailImage = detailImage;
    this.detailName = detailName;
    this.detailPrice = detailPrice;
    this.detailQty = detailQty;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ReceiptDetailItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ReceiptDetailItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.receipt_detail_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ReceiptDetailItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.desc;
      LinearLayout desc = ViewBindings.findChildViewById(rootView, id);
      if (desc == null) {
        break missingId;
      }

      id = R.id.detail_Image;
      ImageView detailImage = ViewBindings.findChildViewById(rootView, id);
      if (detailImage == null) {
        break missingId;
      }

      id = R.id.detail_Name;
      TextView detailName = ViewBindings.findChildViewById(rootView, id);
      if (detailName == null) {
        break missingId;
      }

      id = R.id.detail_Price;
      TextView detailPrice = ViewBindings.findChildViewById(rootView, id);
      if (detailPrice == null) {
        break missingId;
      }

      id = R.id.detail_Qty;
      TextView detailQty = ViewBindings.findChildViewById(rootView, id);
      if (detailQty == null) {
        break missingId;
      }

      return new ReceiptDetailItemBinding((CardView) rootView, desc, detailImage, detailName,
          detailPrice, detailQty);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
